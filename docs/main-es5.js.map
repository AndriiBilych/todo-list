{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/components/color-picker/color-picker.component.html","webpack:///src/app/components/color-picker/color-picker.component.ts","webpack:///src/app/components/task/task.component.ts","webpack:///src/app/components/task/task.component.html","webpack:///src/app/components/input-form/input-form.component.ts","webpack:///src/app/components/input-form/input-form.component.html","webpack:///src/app/components/list/list.component.ts","webpack:///src/app/components/list/list.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/models/BoardModel.ts","webpack:///src/app/services/board-store.service.ts","webpack:///src/app/services/control-panel.service.ts","webpack:///src/app/components/guide/guide.component.ts","webpack:///src/app/components/guide/guide.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/TaskModel.ts","webpack:///src/app/models/ListBoundingInfo.ts","webpack:///src/app/models/TaskBoundingInfo.ts","webpack:///src/app/services/data-service.service.ts","webpack:///src/app/components/control-panel/control-panel.component.ts","webpack:///src/app/components/control-panel/control-panel.component.html","webpack:///src/app/components/board/board.component.ts","webpack:///src/app/components/board/board.component.html","webpack:///src/app/models/ListModel.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","ColorPickerComponent","themes","colors","key","value","getComputedStyle","document","documentElement","getPropertyValue","title","find","color","i","forEach","_","style","setProperty","removeAction","$event","text","TaskComponent","isModifyingTask","event","preventDefault","target","classList","contains","InputFormComponent","elementRef","textSubmissionAction","buttonRef","nativeElement","click","setTimeout","inputForm","inputRef","focus","emit","textToShow","keep","onEnterPressed","closeListAction","list","ListComponent","options","autoHide","isAddingTask","isChangingName","n","Array","length","tasks","push","AppComponent","dataService","boardStoreService","subscription","add","getBoards","subscribe","data","setBoards","unsubscribe","BoardModel","lists","id","uuid","input","Object","assign","map","item","deserialize","sort","first","second","order","BoardStoreService","_selectedBoardSource","selectedBoard$","asObservable","_boardsSource","boards$","next","board","ControlPanelService","_indexSource","_deleteIndexSource","index$","deleteIndex$","GuideComponent","modal","display","getElementById","AppModule","TaskModel","orderIndex","content","selected","ListBoundingInfo","x","y","bottom","right","tasksBoundingInfo","TaskBoundingInfo","DataService","http","get","pipe","ControlPanelComponent","selectedBoard","boards","confirmation","setSelectedBoard","b","index","findIndex","splice","createBoard","removeBoard","BoardComponent","controlPanelService","currentTaskIndex","newTaskIndex","currentListIndex","newListOrderIndex","newListTitle","targetTask","targetList","isDraggingTask","isDraggingList","isDraggingBoard","scrollSpeed","isAddingList","mouseStartingX","currentIndex","taskPositionsByOrder","listsBoundingInfo","scrollContainerRef","targetElement","body","userSelect","buttons","calculateBoundingInfo","boardRef","firstChild","children","parentElement","targetTaskUuid","getAttribute","selectedTaskData","getTaskDataByUuid","task","position","clientX","fakeTask","top","clientY","left","newListIndex","findListIndexByMouseX","findTaskIndexByMouseY","currentList","newList","currentTask","taskCleanup","scrollLeft","undefined","removeProperty","height","background","deltaY","last","listIndex","taskBoundsInfo","selectedListIndex","findListIndexByTaskUuid","taskUuid","listUuid","filter","listElements","from","querySelectorAll","boundingRect","getBoundingClientRect","taskElements","ref","holder","ListModel","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"dropdown\">\n  <button class=\"btn dropbtn left-button\">\n    <div class=\"text\">Change theme</div>\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\" class=\"svg-inline--fa fa-chevron-down fa-w-14\" role=\"img\" viewBox=\"0 0 448 512\">\n      <path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path>\n    </svg>\n  </button>\n  <div class=\"dropdown-content\">\n    <div *ngFor=\"let theme of themes; index as i\" class=\"list-name\" (click)=\"changeColors(i)\">\n      <div class=\"text\">{{theme.title}}</div>\n      <div class=\"square\" [style.background-color]=\"getBackgroundColor(theme.colors)\"></div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-color-picker',\r\n  templateUrl: './color-picker.component.html',\r\n  styleUrls: ['./color-picker.component.css']\r\n})\r\nexport class ColorPickerComponent implements OnInit {\r\n  themes: {colors: {key: string, value: string}[], title: string}[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.themes = [{\r\n      colors: [\r\n        {key: '--main', value: getComputedStyle(document.documentElement).getPropertyValue('--main')},\r\n        {key: '--button', value: getComputedStyle(document.documentElement).getPropertyValue('--button')},\r\n        {key: '--background', value: getComputedStyle(document.documentElement).getPropertyValue('--background')},\r\n        {key: '--highlighted', value: getComputedStyle(document.documentElement).getPropertyValue('--highlighted')},\r\n        {key: '--text', value: getComputedStyle(document.documentElement).getPropertyValue('--text')},\r\n        {key: '--modalBackground', value: getComputedStyle(document.documentElement).getPropertyValue('--modalBackground')},\r\n        {key: '--grayed', value: getComputedStyle(document.documentElement).getPropertyValue('--grayed')}\r\n      ],\r\n      title: 'Default'\r\n    },\r\n    {\r\n      colors: [\r\n        {key: '--main', value: 'rgba(217, 201, 195, 0.53)'},\r\n        {key: '--button', value: '#E8E2DB'},\r\n        {key: '--background', value: '#d48a2a'},\r\n        {key: '--highlighted', value: 'rgb(212, 138, 42)'},\r\n        {key: '--text', value: '#272727'},\r\n        {key: '--modalBackground', value: '#fff'},\r\n        {key: '--grayed', value: 'rgba(68, 70, 71, 0.74)'}\r\n      ],\r\n      title: 'Funky'\r\n    },\r\n    {\r\n      colors: [\r\n        {key: '--main', value: 'rgba(223, 231, 234, 0.11)'},\r\n        {key: '--button', value: '#191919'},\r\n        {key: '--background', value: '#2b3135'},\r\n        {key: '--highlighted', value: 'rgb(53, 55, 56)'},\r\n        {key: '--text', value: '#cccbca'},\r\n        {key: '--modalBackground', value: '#2b3135'},\r\n        {key: '--grayed', value: 'rgba(230, 238, 241, 0.55)'}\r\n      ],\r\n      title: 'Dark'\r\n    }];\r\n  }\r\n\r\n  getBackgroundColor(colors: {key: string, value: string}[]): string {\r\n    return colors.find( color => color.key === '--background').value;\r\n  }\r\n\r\n  changeColors(i): void {\r\n    this.themes[i].colors.forEach(_ => document.documentElement.style.setProperty(_.key, _.value));\r\n  }\r\n}\r\n","import {Component, Input, OnInit, Output, EventEmitter, HostListener} from '@angular/core';\nimport {TaskModel} from '../../models/TaskModel';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  @Input() task: TaskModel;\n  @Output() removeAction = new EventEmitter();\n  isModifyingTask: boolean;\n\n  @HostListener('contextmenu', ['$event'])\n  onRightClick(event): void {\n    event.preventDefault();\n    if (event.target.classList.contains('task') || event.target.classList.contains('task-title')) {\n      this.isModifyingTask = !this.isModifyingTask;\n    }\n  }\n\n  constructor(\n  ) {\n    this.isModifyingTask = false;\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"task-container\" *ngIf=\"task\" [attr.uuid]=\"task.uuid\" [class.task-container-selected]=\"task.selected\">\n  <div class=\"task\" [attr.uuid]=\"task.uuid\" *ngIf=\"!task?.selected\">\n    <ng-container *ngIf=\"!isModifyingTask; else textInput\">\n      <div class=\"task-title\">{{task.content}}</div>\n      <button (click)=\"removeAction.emit()\" class=\"remove-task-button\">&times;</button>\n    </ng-container>\n    <ng-template #textInput>\n      <app-input-form\n        (textSubmissionAction)=\"isModifyingTask = !isModifyingTask; task.content = $event.text.length > 0 ? $event.text : task.content\"\n        [textToShow]=\"task.content\"\n        [targetClass]=\"'task-title'\"\n      ></app-input-form>\n    </ng-template>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Output,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-input-form',\n  templateUrl: './input-form.component.html',\n  styleUrls: ['./input-form.component.css']\n})\nexport class InputFormComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  static inputForm: InputFormComponent = null;\n\n  @Output() textSubmissionAction = new EventEmitter();\n  @Input() textToShow: string;\n  @Input() targetClass: string;\n  @ViewChild('input') inputRef: ElementRef;\n  @ViewChild('button') buttonRef: ElementRef;\n\n  // @HostListener(`document:click`, ['$event.target'])\n  // clickedOut(targetElement: HTMLElement): void {\n  //   const openForms = this.elementRef.nativeElement.querySelectorAll('button.add_task');\n  //   if (!targetElement.classList.contains('add-task')\n  //     && !targetElement.classList.contains(this.targetClass)\n  //     && !targetElement.classList.contains('input-task')) {\n  //     if (openForms.length > 0) {\n  //       openForms.forEach(el => el.click());\n  //     }\n  //   }\n  // }\n\n  @HostListener('document:keydown.escape')\n  pressedEscape(): void {\n    this.buttonRef.nativeElement.click();\n  }\n\n  constructor(\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    // setTimeout makes the code inside asynchronous, which prevents \"NG0100: Expression has changed after it was checked\" error\n    setTimeout(() => {\n      if (InputFormComponent.inputForm !== null) {\n        InputFormComponent.inputForm.buttonRef.nativeElement.click();\n      }\n      InputFormComponent.inputForm = this;\n    });\n    this.inputRef.nativeElement.focus();\n  }\n\n  onEnterPressed(event): void {\n    if (event.key === 'Enter') {\n      this.textSubmissionAction.emit({ text: this.textToShow, keep: true });\n      this.textToShow = '';\n    }\n  }\n\n  ngOnDestroy(): void {\n    InputFormComponent.inputForm = null;\n  }\n}\n","<div class=\"input-form-container\">\n  <input #input\n    name=\"input\"\n    class=\"input-task\"\n    type=\"text\"\n    [(ngModel)]=\"textToShow\"\n    (keypress)=\"onEnterPressed($event)\"\n  >\n  <button #button (click)=\"textSubmissionAction.emit({ text: textToShow, keep: false })\" class=\"add-task\">\n    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"check\" class=\"svg-inline--fa fa-check fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"></path></svg>\n  </button>\n</div>\n","import {Component, Input, OnInit, Output, EventEmitter, HostListener, ViewChild, ElementRef} from '@angular/core';\nimport { ListModel } from '../../models/ListModel';\nimport {TaskModel} from '../../models/TaskModel';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  options = { autoHide: false};\n  isAddingTask: boolean;\n  isChangingName: boolean;\n\n  @Input() list: ListModel;\n  @Output() closeListAction = new EventEmitter();\n  @ViewChild('titleRef') titleRef: ElementRef;\n\n  @HostListener('contextmenu', ['$event'])\n  onRightClick(event): void {\n    event.preventDefault();\n    if (event.target.classList.contains('header') || event.target.classList.contains('title') || event.target.classList.contains('title-container')) {\n      this.isChangingName = !this.isChangingName;\n    }\n  }\n\n  constructor() {\n    this.isAddingTask = false;\n    this.isChangingName = false;\n  }\n\n  ngOnInit(): void {}\n\n\n  array(n: number): number[] {\n    return Array(n);\n  }\n\n  pushToArray(text: string): void {\n    if (text.length > 0) {\n      this.list.tasks.push(new TaskModel(text, this.list.tasks.length));\n    }\n  }\n}\n","<div class=\"header\" [attr.uuid]=\"list.uuid\">\n  <div class=\"title-container\">\n    <ng-container *ngIf=\"!isChangingName; else titleInput\">\n      <div #titleRef class=\"title\">{{list.title}}</div>\n      <button (click)=\"closeListAction.emit()\" class=\"remove-list\">&times;</button>\n    </ng-container>\n    <ng-template #titleInput>\n      <app-input-form\n        (textSubmissionAction)=\"isChangingName = false; list.title = $event.text.length > 0 ? $event.text : list.title\"\n        [textToShow]=\"list.title\"\n        [targetClass]=\"'title'\"\n      ></app-input-form>\n    </ng-template>\n  </div>\n</div>\n\n<div class=\"list\" [attr.uuid]=\"list.uuid\">\n  <ngx-simplebar [options]=\"options\">\n      <app-task\n        *ngFor=\"let task of list.tasks; index as i\"\n        [task]=\"task\"\n        (removeAction)=\"list.tasks.splice(i, 1)\"\n      ></app-task>\n  </ngx-simplebar>\n</div>\n\n<div class=\"footer\" [attr.uuid]=\"list.uuid\">\n  <div class=\"button-container\">\n    <ng-container *ngIf=\"!isAddingTask; else taskInput\">\n      <button (click)=\"isAddingTask = !isAddingTask\" class=\"open-form-to-add-task\">+ Add another task</button>\n    </ng-container>\n    <ng-template #taskInput>\n      <app-input-form\n        (textSubmissionAction)=\"pushToArray($event.text.length > 0 && $event.text !== '\\n' ? $event.text : 'New Task');\n        isAddingTask = $event.keep\"\n        [textToShow]=\"''\"\n        [targetClass]=\"'open-form-to-add-task'\"\n      ></app-input-form>\n    </ng-template>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {DataService} from './services/data-service.service';\nimport {BoardStoreService} from './services/board-store.service';\nimport {isNotNullOrUndefined} from 'codelyzer/util/isNotNullOrUndefined';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'TodoList';\n\n  subscription: Subscription;\n\n  constructor(\n    private readonly dataService: DataService,\n    private readonly boardStoreService: BoardStoreService\n  ) {\n    this.subscription = new Subscription();\n  }\n\n  ngOnInit() {\n    this.subscription.add(this.dataService.getBoards().subscribe( data => {\n      if (isNotNullOrUndefined(data) && data.length > 0) {\n        this.boardStoreService.setBoards(data);\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<app-control-panel></app-control-panel>\n<app-board></app-board>\n","import {ListModel} from './ListModel';\r\nimport {BoardInterface} from './interfaces/board.interface';\r\nimport {DeserializeInterface} from './interfaces/deserializeInterface';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport class BoardModel implements DeserializeInterface<BoardInterface>, BoardInterface {\r\n  lists: ListModel[];\r\n  title: string;\r\n  id: number;\r\n  uuid: string;\r\n\r\n  constructor(title?: string) {\r\n    this.title = title;\r\n    this.lists = [];\r\n    this.id = 0;\r\n    this.uuid = uuidv4();\r\n  }\r\n\r\n  deserialize(input: BoardInterface): this {\r\n    Object.assign(this, input);\r\n\r\n    this.lists = this.lists.map((item) => new ListModel().deserialize(item));\r\n\r\n    this.lists.sort((first, second) =>\r\n      first.order > second.order ? 1 : first.order < second.order ? -1 : 0\r\n    );\r\n\r\n    return this;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {ReplaySubject, Subject} from 'rxjs';\nimport {BoardModel} from '../models/BoardModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardStoreService {\n  private _selectedBoardSource = new ReplaySubject<BoardModel>();\n  selectedBoard$ = this._selectedBoardSource.asObservable();\n\n  private _boardsSource = new ReplaySubject<BoardModel[]>();\n  boards$ = this._boardsSource.asObservable();\n\n  constructor() {\n    this._boardsSource.next([]);\n    this._selectedBoardSource.next(null);\n  }\n\n  setSelectedBoard(board: BoardModel): void {\n    this._selectedBoardSource.next(board);\n  }\n\n  setBoards(data: BoardModel[]) {\n    this._boardsSource.next(data);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControlPanelService {\r\n  // tslint:disable-next-line:variable-name\r\n  private _indexSource = new Subject<number>();\r\n  // tslint:disable-next-line:variable-name\r\n  private _deleteIndexSource = new Subject<number>();\r\n  index$ = this._indexSource.asObservable();\r\n  deleteIndex$ = this._deleteIndexSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setIndex(i: number): void {\r\n    this._indexSource.next(i);\r\n  }\r\n\r\n  deleteIndex(i: number): void {\r\n    this._deleteIndexSource.next(i);\r\n  }\r\n}\r\n","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-guide',\n  templateUrl: './guide.component.html',\n  styleUrls: ['./guide.component.css']\n})\nexport class GuideComponent implements OnInit {\n  modal: HTMLElement;\n\n  @HostListener('document:mousedown', ['$event.target'])\n  onClick(target): void {\n    if (target.classList.contains('modal')) {\n      this.modal.style.display = 'none';\n    }\n  }\n\n  constructor() {\n    this.modal = null;\n  }\n\n  ngOnInit(): void {\n    this.modal = document.getElementById('modal');\n  }\n}\n","<div>\n  <button class=\"btn\" (click)=\"modal.style.display = 'block'\">\n    About\n  </button>\n</div>\n\n<div id=\"modal\" class=\"modal\">\n  <div class=\"modal-content-container\">\n    <div class=\"modal-content\">\n      <button class=\"close\" (click)=\"modal.style.display = 'none'\">&times;</button>\n      <div class=\"label\">\n        <h3>Description</h3>\n      </div>\n\n      <p class=\"description\">\n        <span>This website is a todo manager inspired by Trello</span>\n        It resembles a frontend prototype of a board styled todo list, thus no database or backend server.\n        Created with Angular 11. Feel free to browse provided examples of boards or create your own.\n      </p>\n\n      <div class=\"instructions\">\n        <div class=\"label\">\n          <h3>How to use</h3>\n        </div>\n        <ul>\n          <li>Left click to drag tasks, lists or the board</li>\n          <li>Right click to edit list/board titles or tasks</li>\n        </ul>\n      </div>\n\n      <div class=\"footer\">\n        <div class=\"author\">\n          <div>Made by Andrii Bilych</div>\n          <a href=\"https://www.linkedin.com/in/andrii-bilych-9b3232169/\">LinkedIn</a>\n          <a href=\"https://github.com/AndriiBilych\">Github</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BoardComponent } from './components/board/board.component';\r\nimport { ListComponent } from './components/list/list.component';\r\nimport { ControlPanelComponent } from './components/control-panel/control-panel.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SimplebarAngularModule } from 'simplebar-angular';\r\nimport { InputFormComponent } from './components/input-form/input-form.component';\r\nimport { TaskComponent } from './components/task/task.component';\r\nimport { GuideComponent } from './components/guide/guide.component';\r\nimport { ColorPickerComponent } from './components/color-picker/color-picker.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BoardComponent,\r\n    ListComponent,\r\n    ControlPanelComponent,\r\n    InputFormComponent,\r\n    TaskComponent,\r\n    GuideComponent,\r\n    ColorPickerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SimplebarAngularModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport {TaskInterface} from './interfaces/task.interface';\r\nimport {DeserializeInterface} from './interfaces/deserializeInterface';\r\n\r\nexport class TaskModel implements DeserializeInterface<TaskInterface>, TaskInterface {\r\n  content: string;\r\n  id: number;\r\n  uuid: string;\r\n  order: number;\r\n  selected: boolean;\r\n\r\n  constructor(text?: string, orderIndex?: number) {\r\n    this.id = 0;\r\n    this.uuid = uuidv4();\r\n    this.content = text;\r\n    this.order = orderIndex;\r\n    this.selected = false;\r\n  }\r\n\r\n  deserialize(input: TaskInterface): this {\r\n    return Object.assign(this, input);\r\n  }\r\n}\r\n","import { TaskBoundingInfo } from './TaskBoundingInfo';\r\n\r\nexport class ListBoundingInfo extends TaskBoundingInfo{\r\n  tasksBoundingInfo: TaskBoundingInfo[];\r\n\r\n  constructor(x: number, y: number, bottom: number, right: number, uuid: string) {\r\n    super(x, y, bottom, right, uuid);\r\n    this.tasksBoundingInfo = [];\r\n  }\r\n}\r\n","export class TaskBoundingInfo {\r\n  x: number;\r\n  y: number;\r\n  bottom: number;\r\n  right: number;\r\n  uuid: string;\r\n\r\n  constructor(x, y, bottom, right, uuid) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.bottom = bottom;\r\n    this.right = right;\r\n    this.uuid = uuid;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BoardModel } from '../models/BoardModel';\r\nimport {BoardInterface} from '../models/interfaces/board.interface';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBoards(): Observable<BoardModel[]> {\r\n    return this.http.get<BoardInterface[]>('assets/boards.json')\r\n      .pipe(map((list) => {\r\n        return list.map((item) => new BoardModel().deserialize(item));\r\n      }));\r\n  }\r\n}\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport {BoardModel} from '../../models/BoardModel';\r\nimport {BoardStoreService} from '../../services/board-store.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-control-panel',\r\n  templateUrl: './control-panel.component.html',\r\n  styleUrls: ['./control-panel.component.css']\r\n})\r\nexport class ControlPanelComponent implements OnInit {\r\n  isChangingName: boolean;\r\n\r\n  selectedBoard: BoardModel;\r\n  boards: BoardModel[];\r\n\r\n  subscription: Subscription;\r\n\r\n  @ViewChild('confirmationRef') confirmation: ElementRef;\r\n\r\n  constructor(\r\n    private readonly boardStoreService: BoardStoreService,\r\n  ) {\r\n    this.isChangingName = false;\r\n    this.selectedBoard = null;\r\n    this.boards = [];\r\n    this.subscription = new Subscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(this.boardStoreService.selectedBoard$.subscribe(board => this.selectedBoard = board));\r\n    this.subscription.add(this.boardStoreService.boards$.subscribe(data => this.boards = data));\r\n  }\r\n\r\n  @HostListener('document:mousedown', ['$event.target'])\r\n  onCloseModalClick(target): void {\r\n    if (target.classList.contains('modal')) {\r\n      this.confirmation.nativeElement.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  onClick(uuid: string): void {\r\n    this.boardStoreService.setBoards(this.boards);\r\n    this.boardStoreService.setSelectedBoard(this.boards.find(b => b.uuid === uuid));\r\n  }\r\n\r\n  removeBoard(uuid: string): void {\r\n    const index = this.boards.findIndex(b => b.uuid === uuid);\r\n    this.boards.splice(index, 1);\r\n    this.boardStoreService.setBoards(this.boards);\r\n    if (this.boards.length !== 0) {\r\n      this.boardStoreService.setSelectedBoard(this.boards[this.boards.length - 1]);\r\n    }\r\n\r\n    this.boardStoreService.setSelectedBoard(null);\r\n  }\r\n\r\n  createBoard(): void {\r\n    this.boards.push(new BoardModel('New Board'));\r\n    this.boardStoreService.setBoards(this.boards);\r\n    this.boardStoreService.setSelectedBoard(this.boards[this.boards.length - 1]);\r\n  }\r\n}\r\n","<div class=\"panel\">\r\n  <div class=\"left-container\">\r\n    <div class=\"dropdown\">\r\n      <button class=\"dropBtn left-button\">\r\n        <label class=\"board-title\">{{selectedBoard ? selectedBoard.title : 'Boards'}}</label>\r\n        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\" class=\"svg-inline--fa fa-chevron-down fa-w-14\" role=\"img\" viewBox=\"0 0 448 512\">\r\n          <path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path>\r\n        </svg>\r\n      </button>\r\n      <div class=\"dropdown-content\">\r\n        <button\r\n          class=\"list-name\"\r\n          *ngFor=\"let b of boards; index as i\"\r\n          [class.selected]=\"selectedBoard?.uuid === b.uuid\"\r\n          (click)=\"onClick(b.uuid)\"\r\n        >{{b.title}}</button>\r\n        <button class=\"list-name\" (click)=\"createBoard()\">+ New Board</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"tools\" *ngIf=\"selectedBoard !== null\">\r\n      <div class=\"left-button\">\r\n        <div (click)=\"isChangingName = true\" *ngIf=\"!isChangingName; else titleInput\">\r\n          <span>Edit title</span>\r\n          <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"pen\" class=\"svg-inline--fa fa-pen fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"></path></svg>\r\n        </div>\r\n        <ng-template #titleInput>\r\n          <app-input-form\r\n            (textSubmissionAction)=\"isChangingName = false; selectedBoard.title = $event.text.length > 0 ? $event.text : selectedBoard.title\"\r\n            [textToShow]=\"selectedBoard.title\"\r\n            [targetClass]=\"'left-button'\"\r\n          ></app-input-form>\r\n        </ng-template>\r\n      </div>\r\n      <button class=\"left-button\" (click)=\"confirmationRef.style.display = 'block'\">\r\n        <span>Delete board</span>\r\n        &times;\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"left-container\">\r\n    <app-color-picker></app-color-picker>\r\n    <app-guide></app-guide>\r\n  </div>\r\n\r\n  <div #confirmationRef class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <button class=\"close\" (click)=\"confirmationRef.style.display = 'none'\">&times;</button>\r\n      <div class=\"header\">\r\n        <h3>Are you sure you want to delete \"{{selectedBoard?.title}}\" board?</h3>\r\n      </div>\r\n      <div class=\"choice-container\">\r\n        <button class=\"choice\" (click)=\"removeBoard(selectedBoard.uuid); confirmationRef.style.display = 'none'\">Yes</button>\r\n        <button class=\"choice\" (click)=\"confirmationRef.style.display = 'none'\">No</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport { BoardModel } from '../../models/BoardModel';\r\nimport { TaskBoundingInfo } from '../../models/TaskBoundingInfo';\r\nimport { ListModel } from '../../models/ListModel';\r\nimport { ControlPanelService } from '../../services/control-panel.service';\r\nimport { DataService } from '../../services/data-service.service';\r\nimport {ListBoundingInfo} from '../../models/ListBoundingInfo';\r\nimport {BoardStoreService} from '../../services/board-store.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {TaskModel} from '../../models/TaskModel';\r\nimport {SimplebarAngularComponent} from 'simplebar-angular';\r\nimport {count} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit, OnDestroy {\r\n  options = { autoHide: false};\r\n  selectedBoard: BoardModel;\r\n  boards: BoardModel[];\r\n  selectedTaskData: TaskModel;\r\n\r\n  currentIndex: number;\r\n\r\n  currentTaskIndex = 0;\r\n  newTaskIndex = 1;\r\n  currentListIndex = 0;\r\n  newListOrderIndex = 0;\r\n\r\n  newListTitle = '';\r\n\r\n  targetTask: HTMLElement = null;\r\n  targetList: HTMLElement = null;\r\n  taskPositionsByOrder: TaskBoundingInfo[];\r\n\r\n  // This holds bounding positions and uuids of all lists and tasks\r\n  listsBoundingInfo: ListBoundingInfo[];\r\n\r\n  isAddingList: boolean;\r\n  isDraggingTask = false;\r\n  isDraggingList = false;\r\n  isDraggingBoard = false;\r\n\r\n  subscription: Subscription;\r\n\r\n  @ViewChild('fakeTask') fakeTask: ElementRef;\r\n  @ViewChild('board') boardRef: ElementRef;\r\n  scrollContainerRef: any;\r\n  mouseStartingX: number;\r\n  scrollSpeed = 10;\r\n\r\n  constructor(\r\n    private readonly controlPanelService: ControlPanelService,\r\n    private readonly dataService: DataService,\r\n    private readonly boardStoreService: BoardStoreService,\r\n  ) {\r\n    this.isAddingList = false;\r\n    this.mouseStartingX = null;\r\n    this.selectedBoard = null;\r\n    this.currentIndex = null;\r\n    this.taskPositionsByOrder = [];\r\n    this.listsBoundingInfo = [];\r\n    this.boards = [];\r\n\r\n    this.subscription = new Subscription();\r\n    this.scrollContainerRef = null;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(this.boardStoreService.selectedBoard$.subscribe(board => this.selectedBoard = board));\r\n    this.subscription.add(this.boardStoreService.boards$.subscribe(data => {\r\n      this.boards = data;\r\n\r\n      // Testing, exclusively for disabling title screen\r\n      if (this.boards.length > 0) {\r\n        this.boardStoreService.setSelectedBoard(this.boards[0]);\r\n      }\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event.target, $event'])\r\n  startDrag(targetElement: HTMLElement, event): void {\r\n    document.body.style.userSelect = 'none';\r\n    if (event.buttons === 1) {\r\n      if (!this.listsBoundingInfo.length) {\r\n        this.calculateBoundingInfo();\r\n      }\r\n\r\n      if (!this.scrollContainerRef && this.selectedBoard) {\r\n        this.scrollContainerRef = this.boardRef.nativeElement.firstChild.firstChild.children[1].firstChild.firstChild;\r\n      }\r\n\r\n      if (targetElement.classList.contains('task') || targetElement.classList.contains('task-title')) {\r\n        this.isDraggingTask = true;\r\n        this.targetTask = targetElement;\r\n\r\n        if (targetElement.classList.contains('task-title')) {\r\n          this.targetTask = targetElement.parentElement;\r\n        }\r\n\r\n        const targetTaskUuid = this.targetTask.getAttribute('uuid');\r\n        this.selectedTaskData = this.getTaskDataByUuid(targetTaskUuid);\r\n        this.currentListIndex = this.selectedBoard.lists.findIndex(list => list.tasks.findIndex(task => task.uuid === targetTaskUuid) !== -1);\r\n        this.currentTaskIndex = this.selectedBoard.lists[this.currentListIndex].tasks.findIndex(task => task.uuid === targetTaskUuid);\r\n\r\n        this.selectedBoard.lists[this.currentListIndex].tasks[this.currentTaskIndex].selected = true;\r\n      }\r\n      else if (targetElement.classList.contains('title') || targetElement.classList.contains('title-container')) {\r\n        this.isDraggingList = true;\r\n\r\n        // reference to list-container in board.html\r\n        this.targetList = targetElement.parentElement.parentElement.parentElement;\r\n\r\n        if (targetElement.classList.contains('title')) {\r\n          this.targetList = this.targetList.parentElement;\r\n        }\r\n\r\n        this.targetList.style.position = 'fixed';\r\n\r\n        const uuid = this.targetList.getAttribute('uuid');\r\n        this.currentListIndex = this.selectedBoard.lists.findIndex(list => list.uuid === uuid);\r\n      }\r\n      else if (this.selectedBoard !== null){\r\n       this.isDraggingBoard = true;\r\n       this.mouseStartingX = event.clientX;\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  drag(event): void {\r\n    if (this.isDraggingTask) {\r\n\r\n      // set fake task's position\r\n      this.fakeTask.nativeElement.style.top = `${event.clientY}px`;\r\n      this.fakeTask.nativeElement.style.left = `${event.clientX}px`;\r\n\r\n      const newListIndex = this.findListIndexByMouseX(event.clientX);\r\n      const newTaskIndex = this.findTaskIndexByMouseY(event.clientY, newListIndex);\r\n\r\n      const currentList = this.selectedBoard.lists[this.currentListIndex];\r\n      const newList = this.selectedBoard.lists[newListIndex];\r\n\r\n      // if list is the same\r\n      if (newListIndex === this.currentListIndex) {\r\n        // if task position is new\r\n        if (newTaskIndex !== this.currentTaskIndex) {\r\n          const uuid = this.selectedTaskData.uuid;\r\n          const currentTask = currentList.tasks[this.currentTaskIndex];\r\n          currentList.tasks[this.currentTaskIndex] = currentList.tasks[newTaskIndex];\r\n          currentList.tasks[newTaskIndex] = currentTask;\r\n\r\n          this.currentTaskIndex = newTaskIndex;\r\n\r\n          this.calculateBoundingInfo();\r\n\r\n          // next line refreshes reference to the correct object !IMPORTANT\r\n          this.selectedTaskData = this.getTaskDataByUuid(uuid);\r\n        }\r\n      }\r\n      // if list is different\r\n      else {\r\n        const uuid = this.selectedTaskData.uuid;\r\n\r\n        // delete old task, and add new task\r\n        newList.tasks.splice(newTaskIndex, 0, this.selectedTaskData);\r\n        // next line deletes the object that selectedTaskData is pointing to !IMPORTANT\r\n        currentList.tasks.splice(this.currentTaskIndex, 1);\r\n\r\n        this.currentListIndex = newListIndex;\r\n        this.currentTaskIndex = newTaskIndex;\r\n\r\n        this.calculateBoundingInfo();\r\n        this.taskCleanup(uuid, this.selectedBoard.lists[newListIndex].uuid);\r\n\r\n        // next line refreshes reference to the correct object !IMPORTANT\r\n        this.selectedTaskData = this.getTaskDataByUuid(uuid);\r\n      }\r\n    }\r\n\r\n    if (this.isDraggingList) {\r\n      this.targetList.style.top = `${event.clientY}px`;\r\n      this.targetList.style.left = `${event.clientX}px`;\r\n\r\n      this.newListOrderIndex = this.findListIndexByMouseX(event.clientX);\r\n      if (this.newListOrderIndex !== this.currentListIndex) {\r\n        const currentList = this.selectedBoard.lists[this.currentListIndex];\r\n\r\n        // switch neighbouring lists\r\n        this.selectedBoard.lists[this.currentListIndex] = this.selectedBoard.lists[this.newListOrderIndex];\r\n        this.selectedBoard.lists[this.newListOrderIndex] = currentList;\r\n\r\n        this.currentListIndex = this.newListOrderIndex;\r\n      }\r\n    }\r\n\r\n    if (this.isDraggingBoard) {\r\n      this.scrollContainerRef.scrollLeft -= (event.clientX - this.mouseStartingX) / this.scrollSpeed;\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseup')\r\n  endDrag(): void {\r\n    document.body.style.userSelect = 'all';\r\n    if (this.targetTask !== null) {\r\n      this.isDraggingTask = false;\r\n      this.targetTask = null;\r\n      this.selectedTaskData = null;\r\n      this.listsBoundingInfo = [];\r\n\r\n      // deselect all tasks\r\n      this.selectedBoard.lists.forEach(list => list.tasks.forEach(task => {\r\n        if (task !== undefined) {\r\n          task.selected = false;\r\n        }\r\n      }));\r\n    }\r\n\r\n    if (this.targetList !== null) {\r\n      this.isDraggingList = false;\r\n\r\n      this.targetList.style.removeProperty('position');\r\n      this.targetList.style.removeProperty('top');\r\n      this.targetList.style.removeProperty('left');\r\n      this.targetList.style.height = 'auto';\r\n\r\n      this.targetList.parentElement.style.background = 'none';\r\n      this.targetList.parentElement.style.height = 'auto';\r\n\r\n      this.targetList = null;\r\n    }\r\n\r\n    if (this.selectedBoard !== null) {\r\n      this.isDraggingBoard = false;\r\n      this.mouseStartingX = null;\r\n    }\r\n\r\n    // calculate board bounding info\r\n    this.calculateBoundingInfo();\r\n  }\r\n\r\n  @HostListener('document:wheel', ['$event'])\r\n  onScroll(event): void {\r\n    if (!this.scrollContainerRef && this.selectedBoard) {\r\n      this.scrollContainerRef = this.boardRef.nativeElement.firstChild.firstChild.children[1].firstChild.firstChild;\r\n    }\r\n\r\n    const target = event.target;\r\n\r\n    if (target && target.classList === this.scrollContainerRef.classList) {\r\n      this.scrollContainerRef.scrollLeft += event.deltaY / -1.6;\r\n    }\r\n  }\r\n\r\n  findListIndexByMouseX(clientX: number): number {\r\n    if (!this.listsBoundingInfo || this.listsBoundingInfo.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const index = this.listsBoundingInfo.findIndex( list => clientX >= list.x && clientX <= list.right);\r\n    const first = this.listsBoundingInfo[0];\r\n    const last = this.listsBoundingInfo[this.listsBoundingInfo.length - 1];\r\n\r\n    if (clientX > last.right) {\r\n      return this.listsBoundingInfo.length - 1;\r\n    }\r\n\r\n    if (clientX < first.x) {\r\n      return 0;\r\n    }\r\n\r\n    return index === -1 ? 0 : index;\r\n  }\r\n\r\n  findTaskIndexByMouseY(clientY: number, listIndex: number): number {\r\n    if (!this.listsBoundingInfo || this.listsBoundingInfo.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const taskBoundsInfo = this.listsBoundingInfo[listIndex].tasksBoundingInfo;\r\n\r\n    if (!taskBoundsInfo || taskBoundsInfo.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const first = taskBoundsInfo[0];\r\n    const last = taskBoundsInfo[taskBoundsInfo.length - 1];\r\n    const selectedListIndex = this.findListIndexByTaskUuid(this.selectedTaskData.uuid);\r\n\r\n    if (!first || !last || clientY < first.y) {\r\n      return 0;\r\n    }\r\n\r\n    if (clientY > last.bottom) {\r\n      if (taskBoundsInfo.length === 1 && last.uuid !== this.selectedTaskData.uuid) {\r\n        return 1;\r\n      }\r\n      return taskBoundsInfo.length - (selectedListIndex === listIndex ? 1 : 0);\r\n    }\r\n\r\n    let index = 0;\r\n    for (let i = 0; i < taskBoundsInfo.length; i++) {\r\n      if (clientY >= taskBoundsInfo[i].y) {\r\n        index = i;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  findListIndexByTaskUuid(uuid) {\r\n    for (let i = 0; i < this.selectedBoard.lists.length; i++) {\r\n      for (const task of this.selectedBoard.lists[i].tasks) {\r\n        if (task !== undefined && task.uuid === uuid) {\r\n          return i;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getTaskDataByUuid(uuid: string): TaskModel {\r\n    for (const list of this.selectedBoard.lists) {\r\n      for (const task of list.tasks) {\r\n        if (task !== undefined && task.uuid === uuid) {\r\n          return task;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  taskCleanup(taskUuid: string, listUuid: string) {\r\n    this.selectedBoard.lists.forEach(list => {\r\n      if (list.uuid !== listUuid) {\r\n        list.tasks = list.tasks.filter(task => task.uuid !== taskUuid);\r\n      }\r\n    });\r\n  }\r\n\r\n  removeList(index): void {\r\n    this.selectedBoard.lists.splice(index, 1);\r\n  }\r\n\r\n  pushToArray(text: string): void {\r\n    this.selectedBoard.lists.push(new ListModel(text));\r\n  }\r\n\r\n  loadBoard(uuid: string): void {\r\n    this.boardStoreService.setBoards(this.boards);\r\n    this.boardStoreService.setSelectedBoard(this.boards.find(b => b.uuid === uuid));\r\n  }\r\n\r\n  createBoard(): void {\r\n    this.boards.push(new BoardModel('New Board'));\r\n    this.boardStoreService.setBoards(this.boards);\r\n    this.boardStoreService.setSelectedBoard(this.boards[this.boards.length - 1]);\r\n  }\r\n\r\n  calculateBoundingInfo() {\r\n    this.listsBoundingInfo = [];\r\n    const listElements = Array.from(document.querySelectorAll('div.list-placeholder'));\r\n\r\n    listElements.forEach((list, i) => {\r\n      const boundingRect = list.getBoundingClientRect();\r\n      this.listsBoundingInfo.push(new ListBoundingInfo(boundingRect.x, boundingRect.y, boundingRect.bottom, boundingRect.right, list.getAttribute('uuid')));\r\n\r\n      const taskElements = Array.from(list.querySelectorAll('div.task-container'));\r\n      taskElements.forEach(ref => {\r\n        const holder = ref.getBoundingClientRect();\r\n        this.listsBoundingInfo[i].tasksBoundingInfo.push(new TaskBoundingInfo(holder.x, holder.y, holder.bottom, holder.right, ref.getAttribute('uuid')));\r\n      });\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"selectedBoard !== null; else loadingTemplate\">\n  <div class=\"board\" #board [attr.uuid]=\"selectedBoard.uuid\">\n    <ngx-simplebar [options]=\"options\">\n      <div *ngFor=\"let list of selectedBoard.lists; index as i\"\n           class=\"list-placeholder\"\n           [attr.uuid]=\"list.uuid\"\n           [attr.order-index]=\"list.order\">\n        <div class=\"list-container\" [attr.uuid]=\"list.uuid\">\n          <app-list (closeListAction)=\"removeList(i)\" [list]=\"list\"></app-list>\n        </div>\n      </div>\n      <div class=\"add-list-container\">\n        <ng-container *ngIf=\"!isAddingList; else titleInput\">\n            <button (click)=\"isAddingList = !isAddingList\" class=\"add-list\">+ Add another list</button>\n        </ng-container>\n        <ng-template #titleInput>\n          <app-input-form\n            (textSubmissionAction)=\"isAddingList = !isAddingList;\n            pushToArray($event.text.length > 0 && $event.text !== '\\n' ? $event.text : 'New List');\n            isAddingList = $event.keep\"\n            [targetClass]=\"'add-list'\"\n          ></app-input-form>\n        </ng-template>\n      </div>\n    </ngx-simplebar>\n  </div>\n  <div #fakeTask class=\"task\" *ngIf=\"isDraggingTask\">\n    <div class=\"task-title\">{{selectedTaskData.content}}</div>\n  </div>\n</ng-container>\n\n<ng-template #loadingTemplate>\n  <div class=\"choose-example-container\">\n    <div class=\"example-container\">\n      <div class=\"label\">Choose an example or create new board</div>\n      <button\n        class=\"example\"\n        *ngFor=\"let b of boards\"\n        (click)=\"loadBoard(b.uuid)\"\n      >{{b.title}}</button>\n      <button class=\"example\" (click)=\"createBoard()\">+ New Board</button>\n    </div>\n  </div>\n</ng-template>\n","import { TaskModel } from './TaskModel';\r\nimport {ListInterface} from './interfaces/list.interface';\r\nimport {DeserializeInterface} from './interfaces/deserializeInterface';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport class ListModel implements DeserializeInterface<ListInterface>, ListInterface {\r\n  tasks: TaskModel[];\r\n  title = 'New List';\r\n  id: number;\r\n  uuid: string;\r\n  order: number;\r\n\r\n  constructor(text?: string, order?: number) {\r\n    this.tasks = [];\r\n    this.uuid = uuidv4();\r\n    this.id = 0;\r\n    this.title = text;\r\n    this.order = order;\r\n  }\r\n\r\n  deserialize(input: ListInterface): this {\r\n    Object.assign(this, input);\r\n\r\n    this.tasks = this.tasks.map((item) => new TaskModel().deserialize(item));\r\n\r\n    this.tasks.sort((first, second) =>\r\n      first.order > second.order ? 1 : first.order < second.order ? -1 : 0\r\n    );\r\n\r\n    return this;\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}